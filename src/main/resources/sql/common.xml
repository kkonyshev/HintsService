<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

    <comment>Common queries</comment>

    <entry key="ticketDetails">
        <![CDATA[
SELECT
  t1.id                                                                               AS id,
  amount                                                                              AS amount,
  priceSell                                                                           AS price,
  description                                                                         AS description,
  opt                                                                                 AS 'option',
  if(flower IS NOT NULL, 'FLOWER', if(extract IS NOT NULL, 'EXTRACT', 'SHAKE/CRUMB')) AS type,
  ifnull(dr.reason, comment)                                                          AS comment
FROM (SELECT
        tl.amount,
        tl.priceSell,
        pr.description,
        op.name AS opt,
        pr.id   AS id,
        tl.discountReason_id,
        tl.comment,
        ty.id   AS flower,
        ex.id   AS extract,
        ti.visibleId
      FROM posper_ticketline tl, posper_ticket ti, posper_product pr, posper_category ca1
        LEFT JOIN im_strain_type ty ON ca1.id = ty.posper_category_id
        LEFT JOIN im_strain_extract_type ex ON ca1.id = ex.category_id
        ,
        posper_category ca2, im_strain_category_option co LEFT JOIN im_strain_option op
          ON co.option_id = op.id
      WHERE
        ti.id = tl.ticket_ticketline AND tl.product_id = pr.id AND pr.category_id = ca1.id AND ca1.parent_id = ca2.id
        AND ca2.id = co.category_id
        AND ti.visibleId = :ticketVisibleId
     ) t1 LEFT JOIN posper_discountreason dr
    ON t1.discountReason_id = dr.id;
        ]]>
    </entry>

    <entry key="getUsers">
        <![CDATA[
SELECT
  id         AS id,
  first_name AS first_name,
  last_name  AS last_name
FROM tb_users
WHERE group_id = :groupId AND active = :active
ORDER BY first_name, last_name;
        ]]>
    </entry>

    <entry key="productStock">
        <![CDATA[
SELECT round(units, 2) AS units
FROM posper_product
WHERE id = :productId
        ]]>
    </entry>

    <entry key="getStrains">
        <![CDATA[
SELECT
  id,
  name
FROM im_strain_type
WHERE active = :active
GROUP BY name
ORDER BY name;
        ]]>
    </entry>

    <entry key="getAttributes">
        <![CDATA[
SELECT
  id,
  name
FROM im_strain_attributes
WHERE active = :active
ORDER BY name;
        ]]>
    </entry>

    <entry key="getOptions">
        <![CDATA[
SELECT
  id,
  name
FROM im_strain_option
WHERE active = :active
ORDER BY name;
        ]]>
    </entry>

    <entry key="getTiersCost">
        <![CDATA[
SELECT
  id,
  vendor,
  tier,
  cost
FROM im_strain_cost
WHERE location_id = :restaurantId;
        ]]>
    </entry>

    <entry key="getExtractsCost">
        <![CDATA[
SELECT
  id,
  vendor,
  tier,
  cost
FROM im_strain_cost
WHERE location_id = :restaurantId;
        ]]>
    </entry>

    <entry key="getPrintInfo">
        <![CDATA[
SELECT
  pr.id                                                                       AS product,
  ti.tier_name                                                                AS tier,
  pr.priceSell                                                                AS price,
  pr.code                                                                     AS code,
  att.name                                                                    AS attribute,
  ca2.category_name                                                           AS name,
  if(op.name IS NULL, '', op.name)                                            AS 'options',
  if(pr.weight != 1, concat(pr.weight, ' GRAMS'), concat(pr.weight, ' GRAM')) AS grams,
  pr.weight                                                                   AS weight
FROM posper_product pr, posper_category ca1, posper_category ca2, im_strain_type ty, im_strain_tier ti,
  im_strain_attributes att, im_strain_category_option co LEFT JOIN im_strain_option op
    ON co.option_id = op.id
WHERE ty.location_id = :restaurantId AND
      ca2.id = co.category_id AND pr.category_id = ca1.id AND ca1.parent_id = ca2.id AND ca1.id = ty.posper_category_id
      AND
      ty.im_strain_tier_id = ti.id AND ty.attribute = att.id
      AND ca2.id = :categoryId AND ti.tier_name = :tier
UNION ALL
SELECT
  pr.id                       AS product,
  ''                          AS tier,
  pr.priceSell                AS price,
  pr.code                     AS code,
  ''                          AS attribute,
  ca1.category_name           AS name,
  ''                          AS 'options',
  concat(pr.weight, ' GRAMS') AS grams,
  pr.weight                   AS weight
FROM posper_product pr, posper_category ca1, im_strain_type ty
WHERE pr.unitType = 'jars' AND pr.category_id = ca1.id
      AND ca1.id = :categoryId AND ca1.id = ty.posper_category_id AND ty.location_id = :restaurantId
UNION ALL
SELECT
  pr.id                                                                       AS product,
  ec.tier                                                                     AS tier,
  pr.priceSell                                                                AS price,
  pr.code                                                                     AS code,
  ''                                                                          AS attribute,
  ca2.category_name                                                           AS name,
  if(op.name IS NULL, '', op.name)                                            AS 'options',
  if(pr.weight != 1, concat(pr.weight, ' GRAMS'), concat(pr.weight, ' GRAM')) AS grams,
  pr.weight                                                                   AS weight
FROM posper_product pr, posper_category ca1, posper_category ca2, im_strain_extract_type et, im_strain_extract_cost ec,
  im_strain_category_option co LEFT JOIN im_strain_option op
    ON co.option_id = op.id
WHERE ca2.id = co.category_id AND pr.category_id = ca1.id AND ca1.parent_id = ca2.id AND ca1.id = et.category_id AND
      et.extract_cost_id = ec.id
      AND ca2.id = :categoryId AND ec.tier = :tier
      AND co.location_id = :restaurantId
ORDER BY weight DESC;
        ]]>
    </entry>

    <entry key="empty">
        <![CDATA[
        ]]>
    </entry>
</properties>