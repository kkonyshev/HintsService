<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

    <comment>Common queries</comment>

    <entry key="ticketDetails">
        <![CDATA[
SELECT
  t1.id                                                                               AS id,
  amount                                                                              AS amount,
  priceSell                                                                           AS price,
  description                                                                         AS description,
  opt                                                                                 AS 'option',
  if(flower IS NOT NULL, 'FLOWER', if(extract IS NOT NULL, 'EXTRACT', 'SHAKE/CRUMB')) AS type,
  ifnull(dr.reason, comment)                                                          AS comment
FROM (SELECT
        tl.amount,
        tl.priceSell,
        pr.description,
        op.name AS opt,
        pr.id   AS id,
        tl.discountReason_id,
        tl.comment,
        ty.id   AS flower,
        ex.id   AS extract,
        ti.visibleId
      FROM posper_ticketline tl, posper_ticket ti, posper_product pr, posper_category ca1
        LEFT JOIN im_strain_type ty ON ca1.id = ty.posper_category_id
        LEFT JOIN im_strain_extract_type ex ON ca1.id = ex.category_id
        ,
        posper_category ca2, im_strain_category_option co LEFT JOIN im_strain_option op
          ON co.option_id = op.id
      WHERE
        ti.id = tl.ticket_ticketline AND tl.product_id = pr.id AND pr.category_id = ca1.id AND ca1.parent_id = ca2.id
        AND ca2.id = co.category_id
        AND ti.visibleId = :ticketVisibleId
     ) t1 LEFT JOIN posper_discountreason dr
    ON t1.discountReason_id = dr.id;
        ]]>
    </entry>

    <entry key="getUsers">
        <![CDATA[
SELECT
  id         AS id,
  first_name AS first_name,
  last_name  AS last_name
FROM tb_users
WHERE group_id = :groupId AND active = :active
ORDER BY first_name, last_name;
        ]]>
    </entry>

    <entry key="productStock">
        <![CDATA[
SELECT round(units, 2) AS units
FROM posper_product
WHERE id = :productId
        ]]>
    </entry>

    <entry key="getStrains">
        <![CDATA[
SELECT
  id,
  name
FROM im_strain_type
WHERE active = :active
GROUP BY name
ORDER BY name;
        ]]>
    </entry>

    <entry key="getAttributes">
        <![CDATA[
SELECT
  id,
  name
FROM im_strain_attributes
WHERE active = :active
ORDER BY name;
        ]]>
    </entry>

    <entry key="getOptions">
        <![CDATA[
SELECT
  id,
  name
FROM im_strain_option
WHERE active = :active
ORDER BY name;
        ]]>
    </entry>

    <entry key="getTiersCost">
        <![CDATA[
SELECT
  id,
  vendor,
  tier,
  cost
FROM im_strain_cost
WHERE location_id = :restaurantId;
        ]]>
    </entry>

    <entry key="getExtractsCost">
        <![CDATA[
SELECT
  id,
  vendor,
  tier,
  cost
FROM im_strain_cost
WHERE location_id = :restaurantId;
        ]]>
    </entry>

    <entry key="getPrintInfo">
        <![CDATA[
SELECT
  pr.id                                                                       AS product,
  ti.tier_name                                                                AS tier,
  pr.priceSell                                                                AS price,
  pr.code                                                                     AS code,
  att.name                                                                    AS attribute,
  ca2.category_name                                                           AS name,
  if(op.name IS NULL, '', op.name)                                            AS 'options',
  if(pr.weight != 1, concat(pr.weight, ' GRAMS'), concat(pr.weight, ' GRAM')) AS grams,
  pr.weight                                                                   AS weight
FROM posper_product pr, posper_category ca1, posper_category ca2, im_strain_type ty, im_strain_tier ti,
  im_strain_attributes att, im_strain_category_option co LEFT JOIN im_strain_option op
    ON co.option_id = op.id
WHERE ty.location_id = :restaurantId AND
      ca2.id = co.category_id AND pr.category_id = ca1.id AND ca1.parent_id = ca2.id AND ca1.id = ty.posper_category_id
      AND
      ty.im_strain_tier_id = ti.id AND ty.attribute = att.id
      AND ca2.id = :categoryId AND ti.tier_name = :tier
UNION ALL
SELECT
  pr.id                       AS product,
  ''                          AS tier,
  pr.priceSell                AS price,
  pr.code                     AS code,
  ''                          AS attribute,
  ca1.category_name           AS name,
  ''                          AS 'options',
  concat(pr.weight, ' GRAMS') AS grams,
  pr.weight                   AS weight
FROM posper_product pr, posper_category ca1, im_strain_type ty
WHERE pr.unitType = 'jars' AND pr.category_id = ca1.id
      AND ca1.id = :categoryId AND ca1.id = ty.posper_category_id AND ty.location_id = :restaurantId
UNION ALL
SELECT
  pr.id                                                                       AS product,
  ec.tier                                                                     AS tier,
  pr.priceSell                                                                AS price,
  pr.code                                                                     AS code,
  ''                                                                          AS attribute,
  ca2.category_name                                                           AS name,
  if(op.name IS NULL, '', op.name)                                            AS 'options',
  if(pr.weight != 1, concat(pr.weight, ' GRAMS'), concat(pr.weight, ' GRAM')) AS grams,
  pr.weight                                                                   AS weight
FROM posper_product pr, posper_category ca1, posper_category ca2, im_strain_extract_type et, im_strain_extract_cost ec,
  im_strain_category_option co LEFT JOIN im_strain_option op
    ON co.option_id = op.id
WHERE ca2.id = co.category_id AND pr.category_id = ca1.id AND ca1.parent_id = ca2.id AND ca1.id = et.category_id AND
      et.extract_cost_id = ec.id
      AND ca2.id = :categoryId AND ec.tier = :tier
      AND co.location_id = :restaurantId
ORDER BY weight DESC;
        ]]>
    </entry>

    <entry key="getFlowersMenu">
        <![CDATA[
SELECT
  t1.category_name                                                         AS category_name,
  t1.attribute                                                             AS attribute,
  t1.tier_name                                                             AS tier_name,
  t1.attr2                                                                 AS 'opttion',
  if(ce.long_description IS NULL, 'THC -.-%, Cannabinoids -.-%, Terpenoids -.-%',
     replace(replace(ce.long_description, 'Cannabinoids', 'Cannabinoids'), 'Terpenoids',
             'Terpenoids'))                                                AS description,
  if(sum(t1.7g) IS NULL, 0, sum(t1.7g))                                    AS 7g_units,
  if(sum(35g) IS NULL, 0, sum(35g))                                        AS 35g_units,
  if(sum(175g) IS NULL, 0, sum(175g))                                      AS 175g_units,
  if(sum(t1.1g) IS NULL, 0, sum(t1.1g))                                    AS 1g_units,
  concat('$', floor(round(ti.7g * @rate * 2) /  2))                        AS 7g_price,
  concat('$', floor(round(ti.3_5g * @rate * 2) / 2))                       AS 35g_price,
  concat('$', floor(round(ti.1_75g * @rate * 2) / 2))                      AS 175g_price,
  concat('$', floor(round(ti.1g * @rate * 2) / 2))                         AS 1g_price,
  if(round(round(ti.7g * @rate * 2) / 2 % 1 * 100) = 0, '', round(round(ti.7g * @rate * 2) / 2 % 1 *
                                                                  100))    AS 7g_sup,
  if(round(round(ti.3_5g * @rate * 2) / 2 % 1 * 100) = 0, '', round(round(ti.3_5g * @rate * 2) / 2 % 1 *
                                                                    100))  AS 35g_sup,
  if(round(round(ti.1_75g * @rate * 2) / 2 % 1 * 100) = 0, '', round(round(ti.1_75g * @rate * 2) / 2 % 1 *
                                                                     100)) AS 175g_sup,
  if(round(round(ti.1g * @rate * 2) / 2 % 1 * 100) = 0, '', round(round(ti.1g * @rate * 2) / 2 % 1 *
                                                                  100))    AS 1g_sup
FROM im_strain_tier ti,
  (SELECT
     att.name                        AS attribute,
     if(ce.id IS NULL, ca2.id, NULL) AS id,
     ca2.id                          AS cat_id,
     ca2.category_name,
     ti.tier_name,
     op.name                         AS attr2,
     CASE WHEN pr.weight = 7
       THEN pr.units END             AS 7g,
     CASE WHEN pr.weight = 3.5
       THEN pr.units END             AS 35g,
     CASE WHEN pr.weight = 1.75
       THEN pr.units END             AS 175g,
     CASE WHEN pr.weight = 1
       THEN pr.units END             AS 1g,
     ce.id                           AS certification_id
   FROM im_strain_type ty, im_strain_tier ti, posper_category ca1, posper_category ca2, im_strain_attributes att,
     im_strain_category_option co LEFT JOIN im_strain_option op
       ON co.option_id = op.id
     , posper_product pr LEFT JOIN (SELECT *
                                    FROM im_strain_detail
                                    WHERE ATTR1 = 'ACTIVE'
                                    GROUP BY posper_product_id) t2
       ON pr.id = t2.posper_product_id
     , im_strain_inventory iv, im_strain_units_details ud1, im_strain_units ut,
     im_strain_units_details ud2 LEFT JOIN im_strain_certification ce
       ON ud2.id = ce.unit_details_id
   WHERE iv.units_details_id = ud1.id AND ud1.im_strain_units_id = ut.id AND ut.id = ud2.im_strain_units_id AND
         ud2.ATTR1 = 'LAB' AND t2.im_strain_inventory_id = iv.id
         AND ca2.id = co.category_id AND att.id = ty.attribute AND pr.inStock = 1 AND pr.category_id = ca1.id AND
         ca1.parent_id = ca2.id AND ca1.id = ty.posper_category_id AND ty.im_strain_tier_id = ti.id) t1
  LEFT JOIN (SELECT *
             FROM (SELECT *
                   FROM im_strain_certification
                   WHERE flag IN (1)
                   ORDER BY date DESC) t1) ce
    ON t1.id = ce.posper_category_id OR t1.certification_id = ce.id
WHERE ti.tier_name = t1.tier_name
GROUP BY t1.cat_id, t1.tier_name
UNION
SELECT
  ca.category_name                                         AS category_name,
  ''                                                       AS attribute,
  '-misc'                                                  AS tier_name,
  ''                                                       AS 'option',
  ''                                                       AS description,
  0                                                        AS 7g_units,
  pr.units                                                 AS 35g_units,
  0                                                        AS 175g_units,
  0                                                        AS 1g_units,
  ''                                                       AS 7g_price,
  concat('$', floor(round(pr.priceSell * @rate * 2) / 2))  AS 35g_price,
  ''                                                       AS 175g_price,
  ''                                                       AS 1g_price,
  ''                                                       AS 7g_sup,
  if(round(round(pr.priceSell * @rate * 2) / 2 % 1 * 100) = 0, '',
     round(round(pr.priceSell * @rate * 2) / 2 % 1 * 100)) AS 35g_sup,
  ''                                                       AS 175g_sup,
  ''                                                       AS 1g_sup
FROM posper_product pr, posper_category ca
WHERE pr.category_id = ca.id AND pr.id IN ('shake35', 'crumb35') AND pr.inStock = 1
ORDER BY tier_name DESC, 35g_price DESC, category_name, 'option';

        ]]>
    </entry>

    <entry key="getExtractsMenu">
        <![CDATA[
SELECT
  t1.id                                                                                              AS id,
  t1.extract_cost_id                                                                                 AS extract_cost_id,
  t1.category_name                                                                                   AS category_name,
  t1.attribute                                                                                       AS attribute,
  t1.opt                                                                                             AS 'option',
  if(ce.long_description IS NULL, 'THC -.-% Cannabinoids -.-% Terpenoids -.-%', ce.long_description) AS description,
  t1.price                                                                                           AS price,
  t1.sup                                                                                             AS sup
FROM
  (SELECT
     ca2.id,
     ce.long_description,
     et.extract_cost_id
   FROM posper_product pr, posper_category ca1, posper_category ca2, im_strain_extracts ex, im_strain_extract_type et,
     im_strain_detail dt, im_strain_extract_details ed1,
     im_strain_extract_details ed2 LEFT JOIN im_strain_certification ce
       ON ed2.id = ce.extract_details_id
   WHERE dt.location_id = :restaurantId AND dt.posper_product_id = pr.id AND pr.category_id = ca1.id AND ca1.parent_id = ca2.id AND dt.ATTR1 = 'ACTIVE' AND
         ed1.id = ed2.parent_id AND ex.id = dt.im_strain_extract_id AND et.category_id = ca1.id AND
         ex.extract_details_id = ed1.id AND ed2.ATTR1 = 'LAB') ce
  LEFT JOIN (
              SELECT
                ca2.id,
                et.extract_cost_id,
                ca2.category_name,
                att.name                                                 AS attribute,
                op.name                                                  AS opt,
                concat('$', floor(round(pr.priceSell * @rate * 2) / 2))  AS price,
                if(round(round(pr.priceSell * @rate * 2) / 2 % 1 * 100) = 0, '',
                   round(round(pr.priceSell * @rate * 2) / 2 % 1 * 100)) AS sup,
                floor(round(pr.priceSell * @rate * 2) / 2)               AS priceOrder
              FROM posper_product pr, posper_category ca1, posper_category ca2, im_strain_extract_type et, (SELECT *
                                                                                                            FROM
                                                                                                              im_strain_type
                                                                                                            GROUP BY
                                                                                                              name) t1,
                im_strain_attributes att, im_strain_category_option co LEFT JOIN im_strain_option op
                  ON co.option_id = op.id
              WHERE t1.name = ca2.category_name AND att.id = t1.attribute AND co.category_id = ca2.id AND
                    ca1.parent_id = ca2.id AND pr.category_id = ca1.id AND et.category_id = ca1.id AND
                    pr.inStock = 1) t1
    ON t1.id = ce.id AND t1.extract_cost_id = ce.extract_cost_id
GROUP BY id, extract_cost_id
ORDER BY priceOrder DESC, category_name, attribute, 'option', description;
        ]]>
    </entry>

    <entry key="getFlowersShipments">
        <![CDATA[
SELECT
  sm.id                            AS id,
  sm.visibleId                     AS visible_id,
  sm.vendor                        AS vendor,
  DATE_FORMAT(sm.date, '%Y-%m-%d') AS 'date',
  sum(ut.price)                    AS price,
  sum(ut.units)                    AS units,
  sum(ut.price) / sum(ut.units)    AS price_per_unit
FROM im_strain_shipment sm, im_strain_units ut
WHERE sm.location_id = :restaurantId AND sm.id = ut.shipment_id AND date(sm.date) >= :dateStart AND
      date(sm.date) <= :dateEnd
GROUP BY sm.id
ORDER BY sm.visibleId;
        ]]>
    </entry>

    <entry key="getFlowersShipmentDetails">
        <![CDATA[
/*033adf93-9bb4-11e5-9140-4439c455558d*/
SELECT
  t1.id             AS id,
  t1.category_name  AS category_name,
  t1.option_name    AS 'option',
  t1.tier_name      AS tier,
  t1.units          AS units,
  t1.price_per_unit AS price_per_unit,
  t1.price          AS price,
  t2.sample_id      AS sample_id,
  t2.visibleId      AS visible_id
FROM
  (SELECT
     ut.id,
     ca2.category_name,
     op.name             AS option_name,
     ti.tier_name,
     ut.units,
     ut.price / ut.units AS price_per_unit,
     ut.price,
     ut.shipment_id
   FROM im_strain_units ut, posper_category ca1, posper_category ca2, im_strain_type ty,
     im_strain_tier ti, im_strain_category_option co LEFT JOIN im_strain_option op
       ON op.id = co.option_id
   WHERE ut.location_id = :restaurantId AND ty.posper_category_id = ca1.id AND ty.im_strain_tier_id = ti.id AND
         co.category_id = ca2.id
         AND ca1.parent_id = ca2.id AND ut.posper_category_id = ca1.id AND ut.shipment_id = :shipmentId) t1
  LEFT JOIN (SELECT
               ut.id,
               ud.visibleId,
               ce.sample_id
             FROM im_strain_units ut, im_strain_units_details ud
               LEFT JOIN im_strain_certification ce
                 ON ce.unit_details_id = ud.id
             WHERE ud.im_strain_units_id = ut.id AND ud.ATTR1 = 'LAB'
             GROUP BY ut.id) t2
    ON t1.id = t2.id;

        ]]>
    </entry>

    <entry key="empty">
        <![CDATA[
        ]]>
    </entry>
</properties>